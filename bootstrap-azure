#!/bin/sh
#
# bootstrap script - runs as root
# andrew.mcnab@cern.ch, March-May 2014
# luis.villazon.esteban@cern.ch, May 2015
#

mkdir -p /etc/machineoutputs

(

echo Output of VM bootstrap for `hostname`

# Create a shutdown_message if ACPI shutdown signal received
cp -f /var/spool/checkout/testvcycle/power.sh /etc/acpi/actions/power.sh

# Needed for POSIX semaphores
mount /dev/shm
chmod ugo+rwxt /dev/shm

# Get the big 40G logical partition as /scratch
mkdir -p /scratch
chmod ugo+rwxt /scratch

# We swap on the logical partition (doesn't work on aufs)
fallocate -l 4g /scratch/swapfile
chmod 0600 /scratch/swapfile
mkswap /scratch/swapfile
swapon /scratch/swapfile

# Bigger cvmfs cache, on the logical partition
mkdir -p /scratch/cvmfs-cache
echo -e "CVMFS_QUOTA_LIMIT=11000\nCVMFS_CACHE_BASE=/scratch/cvmfs-cache" >>/etc/cvmfs/site.conf
/usr/bin/cvmfs_config reload

attr -g proxy /mnt/.ro
attr -g proxy /cvmfs/atlas.cern.ch/

# Scratch tmp for TMPDIR
mkdir -p /scratch/tmp
chmod ugo+rwxt /scratch/tmp

# Set up an account for the pilot to run as
/usr/sbin/useradd -b /scratch atlas
cd /scratch/atlas

if [ -r /etc/vmtypefiles/userproxy.pem ] ; then
 # Use proxy in NFS directory if present
 cp /etc/vmtypefiles/userproxy.pem /tmp
else
 # Otherwise try myproxy
 . /cvmfs/grid.cern.ch/3.2.11-1/external/etc/profile.d/grid-env.sh
 unset X509_USER_PROXY
 export X509_USER_CERT=/root/hostcert.pem
 export X509_USER_KEY=/root/hostkey.pem
 # Myproxy username is "Panda queue name:X.509 DN"
 myproxyname=`openssl x509 -in /root/hostcert.pem -noout -subject | sed "s/^subject= /$1:/"`
 echo $myproxyname
 echo 'vcycle' | myproxy-logon --stdin_pass -l "$myproxyname" -o /tmp/userproxy.pem -t 96
 export X509_USER_PROXY=/tmp/userproxy.pem
 voms-proxy-info --all
 if [ $? != 0 ] ; then
  echo "500 no proxy found on NFS or myproxy" > /etc/machineoutputs/shutdown_message
  #/sbin/shutdown -h now
  #sleep 1234567890
 fi
 unset X509_USER_CERT X509_USER_KEY
fi

chown atlas.atlas /tmp/userproxy.pem
chmod 0600 /tmp/userproxy.pem

# user_data passes these to bootstrap on the command line
echo "export SITE_NAME=$1"		 >/scratch/atlas/vm-pilot-extras
echo "export VO_ATLAS_DEFAULT_SE=$2"	>>/scratch/atlas/vm-pilot-extras
echo "export DPM_HOST=$2"		>>/scratch/atlas/vm-pilot-extras
echo "export DPNS_HOST=$2"		>>/scratch/atlas/vm-pilot-extras
echo "export HTTP_LOGS=$4"		>>/scratch/atlas/vm-pilot-extras
chown atlas.atlas /scratch/atlas/vm-pilot-extras

# We use sudo to run the vm-pilot wrapper
echo 'Defaults !requiretty' >>/etc/sudoers
echo 'Defaults visiblepw'   >>/etc/sudoers


# Run vm-pilot
touch /etc/machineoutputs/vm-pilot.err
/usr/bin/sudo -n -u atlas /var/spool/checkout/testvcycle/vm-pilot >/etc/machineoutputs/vm-pilot.out 2>&1

# Tell Vac what the outcome was
/var/spool/checkout/testvcycle/parse-vm-pilot-out /etc/machineoutputs/vm-pilot.out >/etc/machineoutputs/shutdown_message

/bin/cp -f /scratch/tmp/*/pilot3/*/pilotlog.txt \
           /etc/machineoutputs

) >/etc/machineoutputs/vm-pilot.log 2>&1

tar -zcvf /tmp/outputs.tar.gz /etc/machineoutputs